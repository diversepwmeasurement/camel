jobs:
  process:
    if: github.repository == 'apache/camel'
    name: Process
    permissions:
      actions: read
      pull-requests: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      if: "github.event_name == 'pull_request_target' &&\n  (github.event.action ==\
        \ 'opened' ||\n   github.event.action == 'reopened')\n"
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: "github.rest.issues.createComment({\n  issue_number: context.issue.number,\n\
          \  owner: context.repo.owner,\n  repo: context.repo.repo,\n  body: `:star2:\
          \ Thank you for your contribution to the Apache Camel project! :star2: \n\
          \n:robot: CI automation will test this PR automatically.\n\n:camel: Apache\
          \ Camel Committers, please review the following items:\n\n* First-time contributors\
          \ **require MANUAL approval** for the GitHub Actions to run\n\n* You can\
          \ use the command \\`/component-test (camel-)component-name1 (camel-)component-name2..\\\
          ` to request a test from the test bot.\n\n* You can label PRs using \\`build-all\\\
          `, \\`build-dependents\\`, \\`skip-tests\\` and \\`test-dependents\\` to\
          \ fine-tune the checks executed by this PR.\n\n* Build and test logs are\
          \ available in the Summary page. **Only** [Apache Camel committers](https://camel.apache.org/community/team/#committers)\
          \ have access to the summary. \n\n* :warning: Be careful when sharing logs.\
          \ Review their contents before sharing them publicly.`\n\n})\n"
    - continue-on-error: true
      if: 'github.event_name == ''workflow_run''

        '
      name: Download artifact
      uses: actions/github-script@v7
      with:
        script: "var artifacts = await github.rest.actions.listWorkflowRunArtifacts({\n\
          \   owner: context.repo.owner,\n   repo: context.repo.repo,\n   run_id:\
          \ ${{github.event.workflow_run.id }},\n});\nvar matchArtifact = artifacts.data.artifacts.filter((artifact)\
          \ => {\n  return artifact.name == \"test-logs\"\n})[0];\nvar download =\
          \ await github.rest.actions.downloadArtifact({\n   owner: context.repo.owner,\n\
          \   repo: context.repo.repo,\n   artifact_id: matchArtifact.id,\n   archive_format:\
          \ 'zip',\n});\nvar fs = require('fs');\nfs.writeFileSync('${{github.workspace}}/test-logs.zip',\
          \ Buffer.from(download.data));\n"
    - continue-on-error: true
      if: 'github.event_name == ''workflow_run''

        '
      run: unzip test-logs.zip
    - continue-on-error: true
      if: 'github.event_name == ''workflow_run''

        '
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: "let fs = require('fs');\nlet issue_number = Number(fs.readFileSync('./pr_number'));\n\
          let componentsTotal = Number(fs.readFileSync('./components-total'));\nlet\
          \ componentsTested = Number(fs.readFileSync('./components-tested'));\nlet\
          \ componentsFailures = Number(fs.readFileSync('./components-failures'));\n\
          let componentsSuccesses = Number(fs.readFileSync('./components-successes'));\n\
          \                    \nvar message = \"\"\n\nif (componentsTested === 0)\
          \ {\n  if (componentsTotal === 0) {\n    message = \":no_entry_sign: There\
          \ are (likely) no components to be tested in this PR\"\n  } else {\n   \
          \ if (componentsTotal > 20) {\n      message = `:leftwards_arrow_with_hook:\
          \ There are either **too many** changes to be tested in this PR or the code\
          \ **needs be rebased**: (${componentsTotal} components likely to be affected)`\n\
          \    }\n  }\n} else {\n  message = `### Components test results:\n\n| Total\
          \ | Tested | Failed :x: | Passed :white_check_mark: | \n| --- | --- | ---\
          \ |  --- |\n| ${componentsTotal} | ${componentsTested} | ${componentsFailures}\
          \ | ${componentsSuccesses} |`\n}\n\nawait github.rest.issues.createComment({\n\
          \      owner: context.repo.owner,\n      repo: context.repo.repo,\n    \
          \  issue_number: issue_number,\n      body: message\n});\n"
    - continue-on-error: true
      if: 'github.event_name == ''workflow_run''

        '
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: "let fs = require('fs');\nlet issue_number = Number(fs.readFileSync('./pr_number'));\n\
          let coreTested = Number(fs.readFileSync('./core-tested'));\nlet coreFailures\
          \ = Number(fs.readFileSync('./core-failures'));\nlet coreSuccesses = Number(fs.readFileSync('./core-successes'));\n\
          \nvar message = \"\"\n\nif (coreTested === 0) {\n  message = \":no_entry_sign:\
          \ There are (likely) no changes in core core to be tested in this PR\"\n\
          } else {\n  message = `### Core test results:\n\n| Tested | Failed :x: |\
          \ Passed :white_check_mark: | \n| --- | --- |  --- |\n| ${coreTested} |\
          \ ${coreFailures} | ${coreSuccesses} |`\n}\n\nawait github.rest.issues.createComment({\n\
          \      owner: context.repo.owner,\n      repo: context.repo.repo,\n    \
          \  issue_number: issue_number,\n      body: message\n});\n"
name: Component Check
on:
  repository_dispatch:
    types: trigger-ga___component-pr.yaml
permissions: {}
